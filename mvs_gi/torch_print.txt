SphericalSweepStereo(
  (feature_extractor): SphereEquirectFeatExtraction(
    (first): BaseConvBlk2d(
      (conv_layer): Conv2d(3, 16, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), bias=False)
      (norm_layer): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.01)
      (pad_layer): NoOp()
    )
    (blks): Sequential(
      (0): ResConvBlk2d(
        (blk1): BaseConvBlk2d(
          (conv_layer): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (norm_layer): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activation): LeakyReLU(negative_slope=0.01)
          (pad_layer): NoOp()
        )
        (blk2): BaseConvBlk2d(
          (conv_layer): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (norm_layer): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activation): LeakyReLU(negative_slope=0.01)
          (pad_layer): NoOp()
        )
        (one_by_one): NoOp()
        (pad_layer): NoOp()
      )
      (1): ResConvBlk2d(
        (blk1): BaseConvBlk2d(
          (conv_layer): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (norm_layer): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activation): LeakyReLU(negative_slope=0.01)
          (pad_layer): NoOp()
        )
        (blk2): BaseConvBlk2d(
          (conv_layer): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (norm_layer): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activation): LeakyReLU(negative_slope=0.01)
          (pad_layer): NoOp()
        )
        (one_by_one): NoOp()
        (pad_layer): NoOp()
      )
      (2): ResConvBlk2d(
        (blk1): BaseConvBlk2d(
          (conv_layer): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (norm_layer): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activation): LeakyReLU(negative_slope=0.01)
          (pad_layer): NoOp()
        )
        (blk2): BaseConvBlk2d(
          (conv_layer): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (norm_layer): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activation): LeakyReLU(negative_slope=0.01)
          (pad_layer): NoOp()
        )
        (one_by_one): NoOp()
        (pad_layer): NoOp()
      )
      (3): ResConvBlk2d(
        (blk1): BaseConvBlk2d(
          (conv_layer): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (norm_layer): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activation): LeakyReLU(negative_slope=0.01)
          (pad_layer): NoOp()
        )
        (blk2): BaseConvBlk2d(
          (conv_layer): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (norm_layer): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activation): LeakyReLU(negative_slope=0.01)
          (pad_layer): NoOp()
        )
        (one_by_one): NoOp()
        (pad_layer): NoOp()
      )
      (4): ResConvBlk2d(
        (blk1): BaseConvBlk2d(
          (conv_layer): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (norm_layer): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activation): LeakyReLU(negative_slope=0.01)
          (pad_layer): NoOp()
        )
        (blk2): BaseConvBlk2d(
          (conv_layer): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (norm_layer): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activation): LeakyReLU(negative_slope=0.01)
          (pad_layer): NoOp()
        )
        (one_by_one): NoOp()
        (pad_layer): NoOp()
      )
      (5): BaseConvBlk2d(
        (conv_layer): Conv2d(16, 16, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (norm_layer): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activation): LeakyReLU(negative_slope=0.01)
        (pad_layer): NoOp()
      )
      (6): ResConvBlk2d(
        (blk1): BaseConvBlk2d(
          (conv_layer): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (norm_layer): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activation): LeakyReLU(negative_slope=0.01)
          (pad_layer): NoOp()
        )
        (blk2): BaseConvBlk2d(
          (conv_layer): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (norm_layer): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activation): LeakyReLU(negative_slope=0.01)
          (pad_layer): NoOp()
        )
        (one_by_one): NoOp()
        (pad_layer): NoOp()
      )
      (7): ResConvBlk2d(
        (blk1): BaseConvBlk2d(
          (conv_layer): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (norm_layer): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activation): LeakyReLU(negative_slope=0.01)
          (pad_layer): NoOp()
        )
        (blk2): BaseConvBlk2d(
          (conv_layer): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (norm_layer): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activation): LeakyReLU(negative_slope=0.01)
          (pad_layer): NoOp()
        )
        (one_by_one): NoOp()
        (pad_layer): NoOp()
      )
      (8): ResConvBlk2d(
        (blk1): BaseConvBlk2d(
          (conv_layer): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (norm_layer): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activation): LeakyReLU(negative_slope=0.01)
          (pad_layer): NoOp()
        )
        (blk2): BaseConvBlk2d(
          (conv_layer): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (norm_layer): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activation): LeakyReLU(negative_slope=0.01)
          (pad_layer): NoOp()
        )
        (one_by_one): NoOp()
        (pad_layer): NoOp()
      )
      (9): ResConvBlk2d(
        (blk1): BaseConvBlk2d(
          (conv_layer): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (norm_layer): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activation): LeakyReLU(negative_slope=0.01)
          (pad_layer): NoOp()
        )
        (blk2): BaseConvBlk2d(
          (conv_layer): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (norm_layer): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activation): LeakyReLU(negative_slope=0.01)
          (pad_layer): NoOp()
        )
        (one_by_one): NoOp()
        (pad_layer): NoOp()
      )
      (10): ResConvBlk2d(
        (blk1): BaseConvBlk2d(
          (conv_layer): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (norm_layer): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activation): LeakyReLU(negative_slope=0.01)
          (pad_layer): NoOp()
        )
        (blk2): BaseConvBlk2d(
          (conv_layer): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (norm_layer): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activation): LeakyReLU(negative_slope=0.01)
          (pad_layer): NoOp()
        )
        (one_by_one): NoOp()
        (pad_layer): NoOp()
      )
      (11): ResConvBlk2d(
        (blk1): BaseConvBlk2d(
          (conv_layer): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (norm_layer): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activation): LeakyReLU(negative_slope=0.01)
          (pad_layer): NoOp()
        )
        (blk2): BaseConvBlk2d(
          (conv_layer): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (norm_layer): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activation): LeakyReLU(negative_slope=0.01)
          (pad_layer): NoOp()
        )
        (one_by_one): NoOp()
        (pad_layer): NoOp()
      )
      (12): ResConvBlk2d(
        (blk1): BaseConvBlk2d(
          (conv_layer): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (norm_layer): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activation): LeakyReLU(negative_slope=0.01)
          (pad_layer): NoOp()
        )
        (blk2): BaseConvBlk2d(
          (conv_layer): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (norm_layer): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activation): LeakyReLU(negative_slope=0.01)
          (pad_layer): NoOp()
        )
        (one_by_one): NoOp()
        (pad_layer): NoOp()
      )
      (13): ResConvBlk2d(
        (blk1): BaseConvBlk2d(
          (conv_layer): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (norm_layer): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activation): LeakyReLU(negative_slope=0.01)
          (pad_layer): NoOp()
        )
        (blk2): BaseConvBlk2d(
          (conv_layer): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (norm_layer): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activation): LeakyReLU(negative_slope=0.01)
          (pad_layer): NoOp()
        )
        (one_by_one): NoOp()
        (pad_layer): NoOp()
      )
      (14): ResConvBlk2d(
        (blk1): BaseConvBlk2d(
          (conv_layer): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (norm_layer): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activation): LeakyReLU(negative_slope=0.01)
          (pad_layer): NoOp()
        )
        (blk2): BaseConvBlk2d(
          (conv_layer): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (norm_layer): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activation): LeakyReLU(negative_slope=0.01)
          (pad_layer): NoOp()
        )
        (one_by_one): NoOp()
        (pad_layer): NoOp()
      )
      (15): ResConvBlk2d(
        (blk1): BaseConvBlk2d(
          (conv_layer): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (norm_layer): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activation): LeakyReLU(negative_slope=0.01)
          (pad_layer): NoOp()
        )
        (blk2): BaseConvBlk2d(
          (conv_layer): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (norm_layer): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activation): LeakyReLU(negative_slope=0.01)
          (pad_layer): NoOp()
        )
        (one_by_one): NoOp()
        (pad_layer): NoOp()
      )
    )
    (final_layer): SphereConvBlk(
      (activation): LeakyReLU(negative_slope=0.01)
      (blk): Sequential(
        (0): SphereConvEquirect2d()
        (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (cv_builder): SphericalSweepStdMasked(
    (post_vol): BaseConvBlk3d(
      (conv_layer): Conv3d(16, 16, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
      (norm_layer): BatchNorm3d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activation): LeakyReLU(negative_slope=0.01)
    )
  )
  (cv_regulator): UNetCostVolumeRegulatorBase(
    (down_blks): ModuleList(
      (0): UNetDownBlk(
        (first): BaseConvBlk3d(
          (conv_layer): Conv3d(16, 96, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1), bias=False)
          (norm_layer): BatchNorm3d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activation): LeakyReLU(negative_slope=0.01)
        )
        (blks): Sequential(
          (0): ResConvBlk3d(
            (blk1): BaseConvBlk3d(
              (conv_layer): Conv3d(96, 96, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
              (norm_layer): BatchNorm3d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activation): LeakyReLU(negative_slope=0.01)
            )
            (blk2): BaseConvBlk3d(
              (conv_layer): Conv3d(96, 96, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
              (norm_layer): BatchNorm3d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activation): LeakyReLU(negative_slope=0.01)
            )
            (one_by_one): NoOp()
          )
          (1): ResConvBlk3d(
            (blk1): BaseConvBlk3d(
              (conv_layer): Conv3d(96, 96, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
              (norm_layer): BatchNorm3d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activation): LeakyReLU(negative_slope=0.01)
            )
            (blk2): BaseConvBlk3d(
              (conv_layer): Conv3d(96, 96, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
              (norm_layer): BatchNorm3d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activation): LeakyReLU(negative_slope=0.01)
            )
            (one_by_one): NoOp()
          )
          (2): ResConvBlk3d(
            (blk1): BaseConvBlk3d(
              (conv_layer): Conv3d(96, 96, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
              (norm_layer): BatchNorm3d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activation): LeakyReLU(negative_slope=0.01)
            )
            (blk2): BaseConvBlk3d(
              (conv_layer): Conv3d(96, 96, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
              (norm_layer): BatchNorm3d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activation): LeakyReLU(negative_slope=0.01)
            )
            (one_by_one): NoOp()
          )
        )
      )
      (1): UNetDownBlk(
        (first): BaseConvBlk3d(
          (conv_layer): Conv3d(96, 192, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1), bias=False)
          (norm_layer): BatchNorm3d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activation): LeakyReLU(negative_slope=0.01)
        )
        (blks): Sequential(
          (0): ResConvBlk3d(
            (blk1): BaseConvBlk3d(
              (conv_layer): Conv3d(192, 192, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
              (norm_layer): BatchNorm3d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activation): LeakyReLU(negative_slope=0.01)
            )
            (blk2): BaseConvBlk3d(
              (conv_layer): Conv3d(192, 192, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
              (norm_layer): BatchNorm3d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activation): LeakyReLU(negative_slope=0.01)
            )
            (one_by_one): NoOp()
          )
          (1): ResConvBlk3d(
            (blk1): BaseConvBlk3d(
              (conv_layer): Conv3d(192, 192, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
              (norm_layer): BatchNorm3d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activation): LeakyReLU(negative_slope=0.01)
            )
            (blk2): BaseConvBlk3d(
              (conv_layer): Conv3d(192, 192, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
              (norm_layer): BatchNorm3d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activation): LeakyReLU(negative_slope=0.01)
            )
            (one_by_one): NoOp()
          )
          (2): ResConvBlk3d(
            (blk1): BaseConvBlk3d(
              (conv_layer): Conv3d(192, 192, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
              (norm_layer): BatchNorm3d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activation): LeakyReLU(negative_slope=0.01)
            )
            (blk2): BaseConvBlk3d(
              (conv_layer): Conv3d(192, 192, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
              (norm_layer): BatchNorm3d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activation): LeakyReLU(negative_slope=0.01)
            )
            (one_by_one): NoOp()
          )
        )
      )
      (2): UNetDownBlk(
        (first): BaseConvBlk3d(
          (conv_layer): Conv3d(192, 384, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1), bias=False)
          (norm_layer): BatchNorm3d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activation): LeakyReLU(negative_slope=0.01)
        )
        (blks): Sequential(
          (0): ResConvBlk3d(
            (blk1): BaseConvBlk3d(
              (conv_layer): Conv3d(384, 384, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
              (norm_layer): BatchNorm3d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activation): LeakyReLU(negative_slope=0.01)
            )
            (blk2): BaseConvBlk3d(
              (conv_layer): Conv3d(384, 384, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
              (norm_layer): BatchNorm3d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activation): LeakyReLU(negative_slope=0.01)
            )
            (one_by_one): NoOp()
          )
          (1): ResConvBlk3d(
            (blk1): BaseConvBlk3d(
              (conv_layer): Conv3d(384, 384, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
              (norm_layer): BatchNorm3d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activation): LeakyReLU(negative_slope=0.01)
            )
            (blk2): BaseConvBlk3d(
              (conv_layer): Conv3d(384, 384, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
              (norm_layer): BatchNorm3d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activation): LeakyReLU(negative_slope=0.01)
            )
            (one_by_one): NoOp()
          )
          (2): ResConvBlk3d(
            (blk1): BaseConvBlk3d(
              (conv_layer): Conv3d(384, 384, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
              (norm_layer): BatchNorm3d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activation): LeakyReLU(negative_slope=0.01)
            )
            (blk2): BaseConvBlk3d(
              (conv_layer): Conv3d(384, 384, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
              (norm_layer): BatchNorm3d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activation): LeakyReLU(negative_slope=0.01)
            )
            (one_by_one): NoOp()
          )
        )
      )
    )
    (upBlks): ModuleList(
      (0): ResizeConv3d(
        (conv): BaseConvBlk3d(
          (conv_layer): Conv3d(384, 192, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
          (norm_layer): BatchNorm3d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activation): LeakyReLU(negative_slope=0.01)
        )
      )
      (1): ResizeConv3d(
        (conv): BaseConvBlk3d(
          (conv_layer): Conv3d(192, 96, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
          (norm_layer): BatchNorm3d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activation): LeakyReLU(negative_slope=0.01)
        )
      )
    )
    (out_costs): Sequential(
      (0): ResizeConv3d(
        (conv): BaseConvBlk3d(
          (conv_layer): Conv3d(96, 16, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
          (norm_layer): BatchNorm3d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activation): LeakyReLU(negative_slope=0.01)
        )
      )
      (1): BaseConvBlk3d(
        (conv_layer): Conv3d(16, 1, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
        (norm_layer): NoOp()
        (activation): NoOp()
      )
    )
  )
  (dist_regressor): DistanceRegressorWithFixedCandidates()
  (augmentation): AugmentationSequence(
    (0): RandomSingleImageMasking(
      (transform): RandomErasing(RandomErasing(scale=(0.05, 0.2), resize_to=(0.3, 3.3), value=0.0, p=1.0, p_batch=1.0, same_on_batch=False))
    )
  )
  (validation_metrics): ModuleDict(
    (ssim): SSIMMetric()
    (rmse): RMSEMetric()
    (mae): MAEMetric()
    (mae_dist): InverseMetricWrapper(
      (metric): MAEMetric()
    )
    (rmse_dist): InverseMetricWrapper(
      (metric): RMSEMetric()
    )
    (ssim_dist): InverseMetricWrapper(
      (metric): SSIMMetric()
    )
  )
  (volume_loss): VolumeCrossEntropy()
  (distance_loss): MaskedSmoothL1Loss(
    (loss): SmoothL1Loss()
    (dist_regressor): DistanceRegressorWithFixedCandidates()
  )
)
